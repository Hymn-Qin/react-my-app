{
    "sourceFile": "src/pages/admin/product/CreateOrEdit.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1700310494384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1700310494384,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Helmet } from 'react-helmet/es/Helmet';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport AdminMenu from '@pages/admin/Menu';\nimport { Grid, GridCell } from '@components/grid';\nimport { Button } from '@components/button';\nimport { Icon } from '@components/icon';\nimport { H4 } from '@components/typography';\nimport { Input, Select, Textarea } from '@components/input';\n\nimport { renderIf, slug } from '@utils/helpers';\n\nimport { routeImage } from '@routes/index';\nimport { white } from '@components/values/colors';\nimport admin from '@routes/admin';\n\nimport {\n\tcreateOrUpdate as productCreateOrUpdate,\n\tgetById as getProductById,\n\tgetTypes as getProductTypes,\n} from '@store/product/actions';\nimport { getGenders as getUserGenders } from '@store/user/actions';\nimport { upload } from '@store/common/actions';\n\n\nconst CreateOrEdit = (props) => {\n\tconst [state, setState] = useState({\n\t\tisLoading: false,\n\t\tproduct: {\n\t\t\tid: 0,\n\t\t\tname: '',\n\t\t\tslug: '',\n\t\t\tdescription: '',\n\t\t\ttype: 0,\n\t\t\tgender: 0,\n\t\t\timage: '',\n\t\t},\n\t\tproductTypes: [],\n\t\tuserGenders: [],\n\t});\n\n\tuseEffect(() => {\n\t\tprops.getProductTypes()\n\t\t\t.then((types) => {\n\t\t\t\tif (types) {\n\t\t\t\t\tlet product = state.product;\n\t\t\t\t\tproduct.type = types[0].id;\n\t\t\t\t\tsetState(state => ({ ...state, productTypes: types, product: product }));\n\t\t\t\t}\n\t\t\t});\n\t\tprops.getUserGenders()\n\t\t\t.then((userGenders) => {\n\t\t\t\tif (userGenders) {\n\t\t\t\t\tlet product = state.product;\n\t\t\t\t\tproduct.gender = userGenders[0].id;\n\t\t\t\t\tsetState(state => ({ ...state, userGenders: userGenders, product: product }));\n\t\t\t\t}\n\t\t\t});\n\n\t\t// Get product details (edit case)\n\t\tconst getProduct = (productId) => {\n\t\t\tprops.getProductById(productId)\n\t\t\t\t.then((data) => {\n\t\t\t\t\tif (data) setState(state => ({ ...state, product: data }));\n\t\t\t\t});\n\t\t};\n\t\tgetProduct(parseInt(props.match.params.id));\n\t}, []);\n\n\tconst onChange = (e) => {\n\t\tlet product = state.product;\n\t\tproduct[e.target.name] = e.target.value;\n\t\tif (e.target.name === 'name') {\n\t\t\tproduct.slug = slug(e.target.value);\n\t\t}\n\t\t// eslint-disable-next-line no-constant-condition\n\t\tif (e.target.name === 'type' || 'gender') {\n\t\t\tproduct[e.target.name] = parseInt(e.target.value);\n\t\t}\n\t\tconsole.log(product);\n\t\tsetState(state => ({ ...state, product: product }));\n\t};\n\n\tconst onUpload = (e) => {\n\t\tsetState(state => ({ ...state, isLoading: true }));\n\t\tlet data = new FormData();\n\t\tdata.append('file', e.target.files[0]);\n\t\tprops.upload(data)\n\t\t\t.then((data) => {\n\t\t\t\tif (data) {\n\t\t\t\t\tlet product = state.product;\n\t\t\t\t\tproduct.image = `/images/uploads/${data.file}`;\n\t\t\t\t\tsetState(state => ({ ...state, product: product }));\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tsetState(state => ({ ...state, isLoading: false }));\n\t\t\t});\n\t};\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\t\tsetState(state => ({ ...state, isLoading: true }));\n\t\tprops.productCreateOrUpdate(state.product)\n\t\t\t.then((data) => {\n\t\t\t\tif (data) props.history.push(admin.productList.path);\n\t\t\t})\n\t\t\t.then(() => setState(state => ({ ...state, isLoading: false })));\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{/* SEO\t*/}\n\t\t\t<Helmet>\n\t\t\t\t<title>Product / Create or Edit - Admin - Crate</title>\n\t\t\t</Helmet>\n\n\t\t\t{/* Top menu bar */}\n\t\t\t<AdminMenu />\n\n\t\t\t{/* Page content\t*/}\n\t\t\t<div>\n\t\t\t\t{/* Top actions bar */}\n\t\t\t\t<Grid alignCenter={true} style={{ padding: '1em' }}>\n\t\t\t\t\t<GridCell style={{ textAlign: 'left' }}>\n\t\t\t\t\t\t<Link to={admin.productList.path}>\n\t\t\t\t\t\t\t<Button>\n\t\t\t\t\t\t\t\t<Icon size={1.2}>arrow_back</Icon> Back\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</GridCell>\n\t\t\t\t</Grid>\n\n\t\t\t\t{/* Product list */}\n\t\t\t\t<Grid alignCenter={true} style={{ padding: '1em' }}>\n\t\t\t\t\t<GridCell>\n\t\t\t\t\t\t<H4 font='secondary' style={{ marginBottom: '1em', textAlign: 'center' }}>\n\t\t\t\t\t\t\t{props.match.params.id === undefined ? 'Create' : 'Edit'} Product\n\t\t\t\t\t\t</H4>\n\n\t\t\t\t\t\t{/* Form */}\n\t\t\t\t\t\t<form onSubmit={(e) => onSubmit(e)}>\n\t\t\t\t\t\t\t<div style={{ width: '25em', margin: '0 auto' }}>\n\t\t\t\t\t\t\t\t{/* Name */}\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tplaceholder='Name'\n\t\t\t\t\t\t\t\t\trequired='required'\n\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\t\t\tvalue={state.product.name}\n\t\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{/* Description\t*/}\n\t\t\t\t\t\t\t\t<Textarea\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tplaceholder='Description'\n\t\t\t\t\t\t\t\t\trequired='required'\n\t\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\t\tvalue={state.product.description}\n\t\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\t\t\tstyle={{ marginTop: '1em' }}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{/*\tType */}\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\trequired='required'\n\t\t\t\t\t\t\t\t\tname='type'\n\t\t\t\t\t\t\t\t\tvalue={state.product.type}\n\t\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\t\t\tstyle={{ marginTop: '1em' }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tstate.productTypes.length > 0\n\t\t\t\t\t\t\t\t\t\t\t? state.productTypes.map((type) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={type.id} key={type.id}>{type.name}</option>\n\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t\t: <option disabled='disabled' selected='selected'>Select type</option>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</Select>\n\n\t\t\t\t\t\t\t\t{/*\tGender */}\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\trequired='required'\n\t\t\t\t\t\t\t\t\tname='gender'\n\t\t\t\t\t\t\t\t\tvalue={state.product.gender}\n\t\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\t\t\tstyle={{ marginTop: '1em' }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tstate.userGenders.length > 0\n\t\t\t\t\t\t\t\t\t\t\t? state.userGenders.map((gender) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={gender.id} key={gender.id}>{gender.name}</option>\n\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t\t: <option disabled='disabled' selected='selected'>Select gender</option>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</Select>\n\n\t\t\t\t\t\t\t\t{/* Update File\t*/}\n\t\t\t\t\t\t\t\t<div style={{ marginTop: '1em' }}>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\t\t\t\t\tname='file'\n\t\t\t\t\t\t\t\t\t\tmultiple='multiple'\n\t\t\t\t\t\t\t\t\t\trequired={state.product.id === 0}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onUpload(e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t{/*\tUpload image */}\n\t\t\t\t\t\t\t\t{renderIf(state.product.image !== '', () => (\n\t\t\t\t\t\t\t\t\t<img src={routeImage + state.product.image} alt='Product Image'\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 200, marginTop: '1em' }} />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{/* Form submit\t*/}\n\t\t\t\t\t\t\t<div style={{ marginTop: '2em', textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t<Button type='submit' theme='secondary' disabled={state.isLoading}>\n\t\t\t\t\t\t\t\t\t<Icon size={1.2} style={{ color: white }}>check</Icon> Save\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</GridCell>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nCreateOrEdit.propTypes = {\n\tproductCreateOrUpdate: PropTypes.func.isRequired,\n\tgetProductById: PropTypes.func.isRequired,\n\tgetProductTypes: PropTypes.func.isRequired,\n\tgetUserGenders: PropTypes.func.isRequired,\n\tupload: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {\n\tproductCreateOrUpdate,\n\tgetProductById,\n\tgetProductTypes,\n\tgetUserGenders,\n\tupload,\n})(withRouter(CreateOrEdit));\n"
        }
    ]
}