{
    "sourceFile": "src/pages/product/Detail.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1700310517568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1700310517568,
            "name": "Commit-0",
            "content": "import React, { Component, PureComponent, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router-dom';\n\nimport { get } from '@store/product/actions';\nimport Loading from '@layout/Loading';\nimport { renderIf } from '@utils/helpers';\nimport homeRoutes from '@routes/home';\nimport { Helmet } from 'react-helmet/es/Helmet';\nimport { routeLocal } from '@routes';\nimport { Grid, GridCell } from '@components/grid';\nimport { H2, H3, H4 } from '@components/typography';\nimport Card from '@components/card/Card';\nimport { grey, grey2 } from '@components/values/colors';\nimport Related from '@modules/product/Related';\n\nconst Detail = (props) => {\n\n\tuseEffect(() => {\n\t\tconst refresh = (slug) => {\n\t\t\tprops.get(slug);\n\t\t};\n\n\t\trefresh(props.match.params.slug);\n\t}, [props.match.params.slug]);\n\n\tconst { isLoading, item, error } = props.product;\n\n\treturn <div>\n\t\t{!error\n\t\t\t? isLoading\n\t\t\t\t? <Loading />\n\t\t\t\t: renderIf(item && item.id, () => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{/* SEO */}\n\t\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t\t<title>{`Product - ${item.name}`}</title>\n\t\t\t\t\t\t\t<meta name=\"description\" content={`Product - ${item.name}`} />\n\t\t\t\t\t\t\t<meta property=\"og:title\" content={`Product - ${item.name}`} />\n\t\t\t\t\t\t\t<meta property=\"og:image\" content={routeLocal + item.image} />\n\t\t\t\t\t\t\t<meta property=\"og:description\" content={`Product - ${item.name}`} />\n\t\t\t\t\t\t</Helmet>\n\n\t\t\t\t\t\t{/* Top title bar */}\n\t\t\t\t\t\t<Grid style={{ backgroundColor: grey }}>\n\t\t\t\t\t\t\t<GridCell style={{ padding: '2em', textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t<H3 font=\"secondary\">Product</H3>\n\t\t\t\t\t\t\t</GridCell>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* Product Details */}\n\t\t\t\t\t\t<Grid gutter={true} alignCenter={true} style={{ padding: '2em' }}>\n\t\t\t\t\t\t\t{/* Left Content - Image */}\n\t\t\t\t\t\t\t<GridCell style={{ maxWidth: '35em' }}>\n\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t<img src={routeLocal + item.image} alt={item.name} style={{ width: '100%' }} />\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</GridCell>\n\n\t\t\t\t\t\t\t{/* Right Content */}\n\t\t\t\t\t\t\t<GridCell style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t<H2 font=\"secondary\">{item.name}</H2>\n\n\t\t\t\t\t\t\t\t<H4 style={{ marginTop: '1em' }}>{item.description}</H4>\n\n\t\t\t\t\t\t\t\t<p style={{ marginTop: '0.5em', color: grey2 }}>\n\t\t\t\t\t\t\t\t\tLaunched on {new Date(parseInt(item.createdAt)).toDateString()}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</GridCell>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* Related products title bar */}\n\t\t\t\t\t\t<Grid style={{ backgroundColor: grey }}>\n\t\t\t\t\t\t\t<GridCell style={{ padding: '2em', textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t<H3 font=\"secondary\">Related Products</H3>\n\t\t\t\t\t\t\t</GridCell>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* Related products list */}\n\t\t\t\t\t\t<Related productId={item.id} />\n\t\t\t\t\t</div>\n\t\t\t\t))\n\t\t\t: <Redirect to={homeRoutes.home.path} />}\n\t</div>;\n};\n\nDetail.propTypes = {\n\tproduct: PropTypes.object.isRequired,\n\tget: PropTypes.func.isRequired,\n};\n\nconst detailState = (state) => ({\n\tproduct: state.product,\n});\n\nexport default connect(detailState, { get })(withRouter(Detail));\n"
        }
    ]
}